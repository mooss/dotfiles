# Derived from default config CachyOS for sway.
# Read `man 5 sway` for a complete reference.

include config.d/*

###########
# Display #
# Get output names with: `swaymsg -t get_outputs`.

output eDP-1 resolution 1920x1080 position 4480 360
output DP-1 resolution 2560x1440 position 1920 0

bindsym $mod+F11 output eDP-1 resolution 1920x1080 position 4480 360; output DP-1 resolution 2560x1440 position 1920 0

########
# Idle #

# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# Will lock the screen after 300 seconds of inactivity, then turn off displays after another 300
# seconds, turn screens back on when resumed.
# It will also lock the screen before the computer goes to sleep.

#########
# Input #

# Example configuration:
#
#   input type:touchpad {
#     dwt enabled
#     tap enabled
#     natural_scroll enabled
#     middle_emulation enabled
#   }
#
# See `man 5 sway-input` for more information.

input "type:keyboard" {
  xkb_layout fr
}

# Select keyboard layout.
bindsym $mod+p exec echo -e 'fr\ngb' | $menu -dmenu | xargs swaymsg input type:keyboard xkb_layout

##############
# Appearance #

# Colors from https://github.com/catppuccin/i3/.
set $rosewater #f5e0dc
set $flamingo #f2cdcd
set $pink #f5c2e7
set $mauve #cba6f7
set $red #f38ba8
set $maroon #eba0ac
set $peach #fab387
set $yellow #f9e2af
set $green #a6e3a1
set $teal #94e2d5
set $sky #89dceb
set $sapphire #74c7ec
set $blue #89b4fa
set $lavender #b4befe
set $text #cdd6f4
set $subtext1 #bac2de
set $subtext0 #a6adc8
set $overlay2 #9399b2
set $overlay1 #7f849c
set $overlay0 #6c7086
set $surface2 #585b70
set $surface1 #45475a
set $surface0 #313244
set $base #1e1e2e
set $mantle #181825
set $crust #11111b

# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

set $border_px 3

# Background.
output * bg $green solid_color

# Font.
font pango:FiraCode Medium 11

# Gaps.
gaps inner 8
gaps outer 8

################
# Key bindings #
################

# Kill focused window.
bindsym $mod+Shift+q kill

# Start the application launcher.
bindsym $mod+d exec $menu -show drun

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file.
bindsym $mod+Shift+c reload

# Exit sway (logs out of your Wayland session).
bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#################
# App launchers #

bindsym $mod+Return exec $term
bindsym $mod+o exec /usr/bin/firefox
bindsym $mod+n exec nemo
bindsym Print exec scrot ~/%Y-%m-%d-%T-screenshot.png && notify-send "Screenshot saved to ~/$(date +"%Y-%m-%d-%T")-screenshot.png"
bindsym $mod+g exec emacsclient --alternate-editor= --create-frame
bindsym $mod+comma exec emacsclient --alternate-editor= --create-frame ~/projects/dotfiles/config/sway/config

##################
# Moving windows #

# Move focus with homerow keys.
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindcode $mod+$rightcode focus right
# Or with arrow keys.
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Add shift to move the focused window.
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindcode $mod+Shift+$rightcode move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

##############
# Workspaces #

# Switch to workspace.
bindcode $mod+10 workspace number 1
bindcode $mod+11 workspace number 2
bindcode $mod+12 workspace number 3
bindcode $mod+13 workspace number 4
bindcode $mod+14 workspace number 5
bindcode $mod+15 workspace number 6
bindcode $mod+16 workspace number 7
bindcode $mod+17 workspace number 8
bindcode $mod+18 workspace number 9
bindcode $mod+19 workspace number 10

# Move focused container to workspace.
bindcode $mod+Shift+10 move container to workspace number 1
bindcode $mod+Shift+11 move container to workspace number 2
bindcode $mod+Shift+12 move container to workspace number 3
bindcode $mod+Shift+13 move container to workspace number 4
bindcode $mod+Shift+14 move container to workspace number 5
bindcode $mod+Shift+15 move container to workspace number 6
bindcode $mod+Shift+16 move container to workspace number 7
bindcode $mod+Shift+17 move container to workspace number 8
bindcode $mod+Shift+18 move container to workspace number 9
bindcode $mod+Shift+19 move container to workspace number 10

# Note: workspaces can have any name, not just numbers.

##########
# Layout #

# Horizontal and vertical splits.
bindsym $mod+h splith
bindsym $mod+v splitv

# Switch the current container between different layout styles.
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen.
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode.
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area.
bindsym $mod+space focus mode_toggle

# Move focus to the parent container.
bindsym $mod+a focus parent


##############
# Scratchpad #

# Sway has a "scratchpad", which is a bag of holding for windows.
# Windows can be sent there and restored later back later.

# Move the currently focused window to the scratchpad.
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#######################
# Resizing containers #

mode "resize" {
  # left will shrink the containers width.
  # right will grow the containers width.
  # up will shrink the containers height.
  # down will grow the containers height.
  bindsym $left resize shrink width 10px
  bindsym $down resize grow height 10px
  bindsym $up resize shrink height 10px
  bindcode $rightcode resize grow width 10px

  # Same with arrow keys.
  bindsym Left resize shrink width 10px
  bindsym Down resize grow height 10px
  bindsym Up resize shrink height 10px
  bindsym Right resize grow width 10px

  # Return to default mode.
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#############
# Utilities #

# Adjust volume via PulseAudio.
bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle

# Adjust brightness via brightnessctl.
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+

##############
# Status bar #
##############
# Read `man 5 sway-bar` for more information.

bar {
  colors {
    background         $base
    statusline         $text
    focused_statusline $text
    focused_separator  $base

    # target           border bg        text
    focused_workspace  $base  $mauve    $crust
    active_workspace   $base  $surface2 $text
    inactive_workspace $base  $base     $text
    urgent_workspace   $base  $red      $crust
  }
  status_command while date +'%Y-%m-%d %X'; do sleep 1; done
}

#############
# Autostart #
#############

exec emacs --daemon